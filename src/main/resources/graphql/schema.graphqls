#scalar Date
type Query {
    lobbyById(id: Int!): Lobby
    greeting: String
    greetingMono: String
    greetingsFlux: [String]
}
type Mutation {
    register(input: RegisterInput!): User
    login(input: LoginInput!): User
    addLobby(input: LobbyInput!): Lobby
    reset(input: ResetInput!): User
    resetWithToken(input: ResetTokenInput!): User
}
type Subscription {
    lobbyFlux: Lobby
    greetings: String
}
type User {
    id: ID!
    username: String!
    email: String!
    passwordHash: String!
}
type Lobby {
    id: ID!
    status: LobbyStatus!
    owner: User!
    size: Int!
    name: String
    gameCategory: GameCategory
    gameMode: GameMode
#    settings: GameSettings
}
input RegisterInput {
    username: String!
    email: String!
    password: String!
}
input LoginInput {
    username: String!
    password: String!
}
input LobbyInput {
    name: String
}
enum GameCategory {
    PvP
    COOP
    SOLO
}
enum GameMode {
    Words_PP
    SonicFast
    TimeReset
    Party
    Challenge
    Chain
    Classic
    InTime
    PlayerVsAI
    OneWord
    WordCombination
}
enum LobbyStatus {
    OPEN
    FULL
    INGAME
}
input ResetInput {
    email: String!
}
input ResetTokenInput {
    resetToken: String!
    password: String!
}
type GameSettings {
    wordLength: Int
    # ...
}
